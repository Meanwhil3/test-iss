// pipeline {
//     agent any

//     stages {
//         stage('Checkout') {
//             steps {
//                 script {
//                     checkout([$class: 'GitSCM',
//                               branches: [[name: "*/main"]],
//                               doGenerateSubmoduleConfigurations: false,
//                               extensions: [],
//                               userRemoteConfigs: [[credentialsId: 'github', url: "https://github.com/Meanwhil3/test-iss.git"]]])
//                 }
//             }
//         }

//         // stage('Copy .env') {
//         //     steps {
//         //         sh 'cp /home/g65070248/CareTrack/care-track-project.env /var/lib/jenkins/workspace/test/care-track-project/.env'
//         //     }
//         // }

//         stage('Deploy') {
//             steps {
//                 dir('care-track-project') {  // Ensure Docker-compose is executed in the right directory
//                     sh 'docker-compose up -d --build'
//                 }
//             }
//         }
//     }

//     post {
//         always {
//             cleanWs()
//         }
//         success {
//             echo 'Build and Deploy succeeded!'
//         }
//         failure {
//             echo 'Build or Deploy failed!'
//         }
//     }
// }

pipeline {
    agent any

    tools {
        nodejs 'node' // ใช้ชื่อที่คุณตั้งใน Jenkins
    }


    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout code from Git repository
                    checkout([$class: 'GitSCM',
                              branches: [[name: "*/main"]],
                              doGenerateSubmoduleConfigurations: false,
                              extensions: [],
                              userRemoteConfigs: [[credentialsId: 'github', url: "https://github.com/Meanwhil3/test-iss.git"]]])
                }
            }
        }

        stage('Build') {
            steps {
                dir('care-track-project') {  // Navigate to your project folder
                    // Check Node.js version
                    sh 'node -v'

                    // Install dependencies
                    sh 'npm install'

                    // Generate Prisma client
                    sh 'npx prisma generate'

                    // Build the Next.js app
                    sh 'npm run build'
                }
            }
        }

        stage('Deploy') {
            steps {
                dir('care-track-project') {  // Ensure Docker-compose is executed in the right directory
                    // Run Docker containers
                    sh 'docker-compose up -d --build'
                }
            }
        }
    }

}
